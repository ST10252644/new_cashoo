// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRewardstwoBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView discPage;

  @NonNull
  public final NestedScrollView main2;

  @NonNull
  public final RecyclerView recyclerClaimBronze;

  @NonNull
  public final RecyclerView recyclerClaimGold;

  @NonNull
  public final RecyclerView recyclerClaimSilver;

  @NonNull
  public final TextView tierBron2;

  @NonNull
  public final TextView txtPoints2;

  @NonNull
  public final TextView txtRew2;

  @NonNull
  public final TextView txtYouHave2;

  private FragmentRewardstwoBinding(@NonNull NestedScrollView rootView, @NonNull TextView discPage,
      @NonNull NestedScrollView main2, @NonNull RecyclerView recyclerClaimBronze,
      @NonNull RecyclerView recyclerClaimGold, @NonNull RecyclerView recyclerClaimSilver,
      @NonNull TextView tierBron2, @NonNull TextView txtPoints2, @NonNull TextView txtRew2,
      @NonNull TextView txtYouHave2) {
    this.rootView = rootView;
    this.discPage = discPage;
    this.main2 = main2;
    this.recyclerClaimBronze = recyclerClaimBronze;
    this.recyclerClaimGold = recyclerClaimGold;
    this.recyclerClaimSilver = recyclerClaimSilver;
    this.tierBron2 = tierBron2;
    this.txtPoints2 = txtPoints2;
    this.txtRew2 = txtRew2;
    this.txtYouHave2 = txtYouHave2;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRewardstwoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRewardstwoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_rewardstwo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRewardstwoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.discPage;
      TextView discPage = ViewBindings.findChildViewById(rootView, id);
      if (discPage == null) {
        break missingId;
      }

      NestedScrollView main2 = (NestedScrollView) rootView;

      id = R.id.recyclerClaimBronze;
      RecyclerView recyclerClaimBronze = ViewBindings.findChildViewById(rootView, id);
      if (recyclerClaimBronze == null) {
        break missingId;
      }

      id = R.id.recyclerClaimGold;
      RecyclerView recyclerClaimGold = ViewBindings.findChildViewById(rootView, id);
      if (recyclerClaimGold == null) {
        break missingId;
      }

      id = R.id.recyclerClaimSilver;
      RecyclerView recyclerClaimSilver = ViewBindings.findChildViewById(rootView, id);
      if (recyclerClaimSilver == null) {
        break missingId;
      }

      id = R.id.tierBron2;
      TextView tierBron2 = ViewBindings.findChildViewById(rootView, id);
      if (tierBron2 == null) {
        break missingId;
      }

      id = R.id.txtPoints2;
      TextView txtPoints2 = ViewBindings.findChildViewById(rootView, id);
      if (txtPoints2 == null) {
        break missingId;
      }

      id = R.id.txtRew2;
      TextView txtRew2 = ViewBindings.findChildViewById(rootView, id);
      if (txtRew2 == null) {
        break missingId;
      }

      id = R.id.txtYouHave2;
      TextView txtYouHave2 = ViewBindings.findChildViewById(rootView, id);
      if (txtYouHave2 == null) {
        break missingId;
      }

      return new FragmentRewardstwoBinding((NestedScrollView) rootView, discPage, main2,
          recyclerClaimBronze, recyclerClaimGold, recyclerClaimSilver, tierBron2, txtPoints2,
          txtRew2, txtYouHave2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
