// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDiscountBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView back2;

  @NonNull
  public final Chip chipAccess;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final Chip chipCloths;

  @NonNull
  public final Chip chipFood;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final Chip chipShoes;

  @NonNull
  public final EditText disSearch;

  @NonNull
  public final NestedScrollView disc;

  @NonNull
  public final LinearLayout discClothing;

  @NonNull
  public final TextView discTitle;

  @NonNull
  public final LinearLayout discTopBar;

  @NonNull
  public final RecyclerView recyclerViewAccessories;

  @NonNull
  public final RecyclerView recyclerViewClothing;

  @NonNull
  public final RecyclerView recyclerViewFood;

  @NonNull
  public final RecyclerView recyclerViewShoes;

  @NonNull
  public final LinearLayout searchSection;

  private ActivityDiscountBinding(@NonNull NestedScrollView rootView, @NonNull ImageView back2,
      @NonNull Chip chipAccess, @NonNull Chip chipAll, @NonNull Chip chipCloths,
      @NonNull Chip chipFood, @NonNull ChipGroup chipGroup, @NonNull Chip chipShoes,
      @NonNull EditText disSearch, @NonNull NestedScrollView disc,
      @NonNull LinearLayout discClothing, @NonNull TextView discTitle,
      @NonNull LinearLayout discTopBar, @NonNull RecyclerView recyclerViewAccessories,
      @NonNull RecyclerView recyclerViewClothing, @NonNull RecyclerView recyclerViewFood,
      @NonNull RecyclerView recyclerViewShoes, @NonNull LinearLayout searchSection) {
    this.rootView = rootView;
    this.back2 = back2;
    this.chipAccess = chipAccess;
    this.chipAll = chipAll;
    this.chipCloths = chipCloths;
    this.chipFood = chipFood;
    this.chipGroup = chipGroup;
    this.chipShoes = chipShoes;
    this.disSearch = disSearch;
    this.disc = disc;
    this.discClothing = discClothing;
    this.discTitle = discTitle;
    this.discTopBar = discTopBar;
    this.recyclerViewAccessories = recyclerViewAccessories;
    this.recyclerViewClothing = recyclerViewClothing;
    this.recyclerViewFood = recyclerViewFood;
    this.recyclerViewShoes = recyclerViewShoes;
    this.searchSection = searchSection;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDiscountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDiscountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_discount, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDiscountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back2;
      ImageView back2 = ViewBindings.findChildViewById(rootView, id);
      if (back2 == null) {
        break missingId;
      }

      id = R.id.chipAccess;
      Chip chipAccess = ViewBindings.findChildViewById(rootView, id);
      if (chipAccess == null) {
        break missingId;
      }

      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipCloths;
      Chip chipCloths = ViewBindings.findChildViewById(rootView, id);
      if (chipCloths == null) {
        break missingId;
      }

      id = R.id.chipFood;
      Chip chipFood = ViewBindings.findChildViewById(rootView, id);
      if (chipFood == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.chipShoes;
      Chip chipShoes = ViewBindings.findChildViewById(rootView, id);
      if (chipShoes == null) {
        break missingId;
      }

      id = R.id.disSearch;
      EditText disSearch = ViewBindings.findChildViewById(rootView, id);
      if (disSearch == null) {
        break missingId;
      }

      NestedScrollView disc = (NestedScrollView) rootView;

      id = R.id.discClothing;
      LinearLayout discClothing = ViewBindings.findChildViewById(rootView, id);
      if (discClothing == null) {
        break missingId;
      }

      id = R.id.discTitle;
      TextView discTitle = ViewBindings.findChildViewById(rootView, id);
      if (discTitle == null) {
        break missingId;
      }

      id = R.id.discTopBar;
      LinearLayout discTopBar = ViewBindings.findChildViewById(rootView, id);
      if (discTopBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewAccessories;
      RecyclerView recyclerViewAccessories = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAccessories == null) {
        break missingId;
      }

      id = R.id.recyclerViewClothing;
      RecyclerView recyclerViewClothing = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewClothing == null) {
        break missingId;
      }

      id = R.id.recyclerViewFood;
      RecyclerView recyclerViewFood = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewFood == null) {
        break missingId;
      }

      id = R.id.recyclerViewShoes;
      RecyclerView recyclerViewShoes = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewShoes == null) {
        break missingId;
      }

      id = R.id.searchSection;
      LinearLayout searchSection = ViewBindings.findChildViewById(rootView, id);
      if (searchSection == null) {
        break missingId;
      }

      return new ActivityDiscountBinding((NestedScrollView) rootView, back2, chipAccess, chipAll,
          chipCloths, chipFood, chipGroup, chipShoes, disSearch, disc, discClothing, discTitle,
          discTopBar, recyclerViewAccessories, recyclerViewClothing, recyclerViewFood,
          recyclerViewShoes, searchSection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
