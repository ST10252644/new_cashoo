// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDiscountBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnRedeem;

  @NonNull
  public final ImageView discImg;

  @NonNull
  public final TextView tvDiscDetails;

  @NonNull
  public final TextView tvRewardTitle;

  @NonNull
  public final TextView txtDiscName;

  private ItemDiscountBinding(@NonNull CardView rootView, @NonNull Button btnRedeem,
      @NonNull ImageView discImg, @NonNull TextView tvDiscDetails, @NonNull TextView tvRewardTitle,
      @NonNull TextView txtDiscName) {
    this.rootView = rootView;
    this.btnRedeem = btnRedeem;
    this.discImg = discImg;
    this.tvDiscDetails = tvDiscDetails;
    this.tvRewardTitle = tvRewardTitle;
    this.txtDiscName = txtDiscName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDiscountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDiscountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_discount, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDiscountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRedeem;
      Button btnRedeem = ViewBindings.findChildViewById(rootView, id);
      if (btnRedeem == null) {
        break missingId;
      }

      id = R.id.discImg;
      ImageView discImg = ViewBindings.findChildViewById(rootView, id);
      if (discImg == null) {
        break missingId;
      }

      id = R.id.tvDiscDetails;
      TextView tvDiscDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvDiscDetails == null) {
        break missingId;
      }

      id = R.id.tvRewardTitle;
      TextView tvRewardTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvRewardTitle == null) {
        break missingId;
      }

      id = R.id.txtDiscName;
      TextView txtDiscName = ViewBindings.findChildViewById(rootView, id);
      if (txtDiscName == null) {
        break missingId;
      }

      return new ItemDiscountBinding((CardView) rootView, btnRedeem, discImg, tvDiscDetails,
          tvRewardTitle, txtDiscName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
