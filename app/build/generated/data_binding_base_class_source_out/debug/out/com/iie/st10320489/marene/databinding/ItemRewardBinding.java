// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRewardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ImageReward;

  @NonNull
  public final TextView textRewardDate;

  @NonNull
  public final TextView textRewardPoints;

  @NonNull
  public final TextView textRewardTitle;

  private ItemRewardBinding(@NonNull CardView rootView, @NonNull ImageView ImageReward,
      @NonNull TextView textRewardDate, @NonNull TextView textRewardPoints,
      @NonNull TextView textRewardTitle) {
    this.rootView = rootView;
    this.ImageReward = ImageReward;
    this.textRewardDate = textRewardDate;
    this.textRewardPoints = textRewardPoints;
    this.textRewardTitle = textRewardTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRewardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRewardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_reward, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRewardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ImageReward;
      ImageView ImageReward = ViewBindings.findChildViewById(rootView, id);
      if (ImageReward == null) {
        break missingId;
      }

      id = R.id.textRewardDate;
      TextView textRewardDate = ViewBindings.findChildViewById(rootView, id);
      if (textRewardDate == null) {
        break missingId;
      }

      id = R.id.textRewardPoints;
      TextView textRewardPoints = ViewBindings.findChildViewById(rootView, id);
      if (textRewardPoints == null) {
        break missingId;
      }

      id = R.id.textRewardTitle;
      TextView textRewardTitle = ViewBindings.findChildViewById(rootView, id);
      if (textRewardTitle == null) {
        break missingId;
      }

      return new ItemRewardBinding((CardView) rootView, ImageReward, textRewardDate,
          textRewardPoints, textRewardTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
