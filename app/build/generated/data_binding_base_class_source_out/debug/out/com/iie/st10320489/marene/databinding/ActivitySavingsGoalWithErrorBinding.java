// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySavingsGoalWithErrorBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ImageView leftIcon;

  @NonNull
  public final SeekBar maxSpendingSlider;

  @NonNull
  public final TextView maxSpendingValue;

  @NonNull
  public final SeekBar minSavingsSlider;

  @NonNull
  public final TextView minSavingsValue;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Spinner paydaySpinner;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SeekBar salarySlider;

  @NonNull
  public final TextView salaryValue;

  @NonNull
  public final TextView subtitleTextView;

  @NonNull
  public final TextView titleTextView;

  private ActivitySavingsGoalWithErrorBinding(@NonNull ScrollView rootView,
      @NonNull ImageButton backButton, @NonNull ImageView leftIcon,
      @NonNull SeekBar maxSpendingSlider, @NonNull TextView maxSpendingValue,
      @NonNull SeekBar minSavingsSlider, @NonNull TextView minSavingsValue,
      @NonNull Button nextButton, @NonNull Spinner paydaySpinner, @NonNull ProgressBar progressBar,
      @NonNull SeekBar salarySlider, @NonNull TextView salaryValue,
      @NonNull TextView subtitleTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.leftIcon = leftIcon;
    this.maxSpendingSlider = maxSpendingSlider;
    this.maxSpendingValue = maxSpendingValue;
    this.minSavingsSlider = minSavingsSlider;
    this.minSavingsValue = minSavingsValue;
    this.nextButton = nextButton;
    this.paydaySpinner = paydaySpinner;
    this.progressBar = progressBar;
    this.salarySlider = salarySlider;
    this.salaryValue = salaryValue;
    this.subtitleTextView = subtitleTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySavingsGoalWithErrorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySavingsGoalWithErrorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_savings_goal_with_error, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySavingsGoalWithErrorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.leftIcon;
      ImageView leftIcon = ViewBindings.findChildViewById(rootView, id);
      if (leftIcon == null) {
        break missingId;
      }

      id = R.id.maxSpendingSlider;
      SeekBar maxSpendingSlider = ViewBindings.findChildViewById(rootView, id);
      if (maxSpendingSlider == null) {
        break missingId;
      }

      id = R.id.maxSpendingValue;
      TextView maxSpendingValue = ViewBindings.findChildViewById(rootView, id);
      if (maxSpendingValue == null) {
        break missingId;
      }

      id = R.id.minSavingsSlider;
      SeekBar minSavingsSlider = ViewBindings.findChildViewById(rootView, id);
      if (minSavingsSlider == null) {
        break missingId;
      }

      id = R.id.minSavingsValue;
      TextView minSavingsValue = ViewBindings.findChildViewById(rootView, id);
      if (minSavingsValue == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.paydaySpinner;
      Spinner paydaySpinner = ViewBindings.findChildViewById(rootView, id);
      if (paydaySpinner == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.salarySlider;
      SeekBar salarySlider = ViewBindings.findChildViewById(rootView, id);
      if (salarySlider == null) {
        break missingId;
      }

      id = R.id.salaryValue;
      TextView salaryValue = ViewBindings.findChildViewById(rootView, id);
      if (salaryValue == null) {
        break missingId;
      }

      id = R.id.subtitleTextView;
      TextView subtitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivitySavingsGoalWithErrorBinding((ScrollView) rootView, backButton, leftIcon,
          maxSpendingSlider, maxSpendingValue, minSavingsSlider, minSavingsValue, nextButton,
          paydaySpinner, progressBar, salarySlider, salaryValue, subtitleTextView, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
