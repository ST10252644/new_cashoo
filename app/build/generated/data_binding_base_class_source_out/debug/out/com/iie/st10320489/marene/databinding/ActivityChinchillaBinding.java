// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChinchillaBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final View beigeButton;

  @NonNull
  public final View blackButton;

  @NonNull
  public final View brownButton;

  @NonNull
  public final ImageView chinchillaImage;

  @NonNull
  public final LinearLayout chinchillaLayout;

  @NonNull
  public final LinearLayout colorButtonsLayout;

  @NonNull
  public final View greyButton;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView subtitleTextView;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final View violetButton;

  @NonNull
  public final View whiteButton;

  private ActivityChinchillaBinding(@NonNull ScrollView rootView, @NonNull ImageButton backButton,
      @NonNull View beigeButton, @NonNull View blackButton, @NonNull View brownButton,
      @NonNull ImageView chinchillaImage, @NonNull LinearLayout chinchillaLayout,
      @NonNull LinearLayout colorButtonsLayout, @NonNull View greyButton,
      @NonNull Button nextButton, @NonNull ProgressBar progressBar,
      @NonNull TextView subtitleTextView, @NonNull TextView titleTextView,
      @NonNull View violetButton, @NonNull View whiteButton) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.beigeButton = beigeButton;
    this.blackButton = blackButton;
    this.brownButton = brownButton;
    this.chinchillaImage = chinchillaImage;
    this.chinchillaLayout = chinchillaLayout;
    this.colorButtonsLayout = colorButtonsLayout;
    this.greyButton = greyButton;
    this.nextButton = nextButton;
    this.progressBar = progressBar;
    this.subtitleTextView = subtitleTextView;
    this.titleTextView = titleTextView;
    this.violetButton = violetButton;
    this.whiteButton = whiteButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChinchillaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChinchillaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chinchilla, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChinchillaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.beigeButton;
      View beigeButton = ViewBindings.findChildViewById(rootView, id);
      if (beigeButton == null) {
        break missingId;
      }

      id = R.id.blackButton;
      View blackButton = ViewBindings.findChildViewById(rootView, id);
      if (blackButton == null) {
        break missingId;
      }

      id = R.id.brownButton;
      View brownButton = ViewBindings.findChildViewById(rootView, id);
      if (brownButton == null) {
        break missingId;
      }

      id = R.id.chinchillaImage;
      ImageView chinchillaImage = ViewBindings.findChildViewById(rootView, id);
      if (chinchillaImage == null) {
        break missingId;
      }

      id = R.id.chinchillaLayout;
      LinearLayout chinchillaLayout = ViewBindings.findChildViewById(rootView, id);
      if (chinchillaLayout == null) {
        break missingId;
      }

      id = R.id.colorButtonsLayout;
      LinearLayout colorButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (colorButtonsLayout == null) {
        break missingId;
      }

      id = R.id.greyButton;
      View greyButton = ViewBindings.findChildViewById(rootView, id);
      if (greyButton == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.subtitleTextView;
      TextView subtitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.violetButton;
      View violetButton = ViewBindings.findChildViewById(rootView, id);
      if (violetButton == null) {
        break missingId;
      }

      id = R.id.whiteButton;
      View whiteButton = ViewBindings.findChildViewById(rootView, id);
      if (whiteButton == null) {
        break missingId;
      }

      return new ActivityChinchillaBinding((ScrollView) rootView, backButton, beigeButton,
          blackButton, brownButton, chinchillaImage, chinchillaLayout, colorButtonsLayout,
          greyButton, nextButton, progressBar, subtitleTextView, titleTextView, violetButton,
          whiteButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
