// Generated by view binder compiler. Do not edit!
package com.iie.st10320489.marene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.iie.st10320489.marene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRewardClaimBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button ClaimButton;

  @NonNull
  public final TextView ClaimDate;

  @NonNull
  public final ImageView ClaimImage;

  @NonNull
  public final TextView ClaimRewardPoints;

  @NonNull
  public final TextView ClaimRewardTitle;

  private ItemRewardClaimBinding(@NonNull CardView rootView, @NonNull Button ClaimButton,
      @NonNull TextView ClaimDate, @NonNull ImageView ClaimImage,
      @NonNull TextView ClaimRewardPoints, @NonNull TextView ClaimRewardTitle) {
    this.rootView = rootView;
    this.ClaimButton = ClaimButton;
    this.ClaimDate = ClaimDate;
    this.ClaimImage = ClaimImage;
    this.ClaimRewardPoints = ClaimRewardPoints;
    this.ClaimRewardTitle = ClaimRewardTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRewardClaimBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRewardClaimBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_reward_claim, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRewardClaimBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ClaimButton;
      Button ClaimButton = ViewBindings.findChildViewById(rootView, id);
      if (ClaimButton == null) {
        break missingId;
      }

      id = R.id.ClaimDate;
      TextView ClaimDate = ViewBindings.findChildViewById(rootView, id);
      if (ClaimDate == null) {
        break missingId;
      }

      id = R.id.ClaimImage;
      ImageView ClaimImage = ViewBindings.findChildViewById(rootView, id);
      if (ClaimImage == null) {
        break missingId;
      }

      id = R.id.ClaimRewardPoints;
      TextView ClaimRewardPoints = ViewBindings.findChildViewById(rootView, id);
      if (ClaimRewardPoints == null) {
        break missingId;
      }

      id = R.id.ClaimRewardTitle;
      TextView ClaimRewardTitle = ViewBindings.findChildViewById(rootView, id);
      if (ClaimRewardTitle == null) {
        break missingId;
      }

      return new ItemRewardClaimBinding((CardView) rootView, ClaimButton, ClaimDate, ClaimImage,
          ClaimRewardPoints, ClaimRewardTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
